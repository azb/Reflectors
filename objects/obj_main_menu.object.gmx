<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !sound_isplaying(snd_crowd)
sound_loop(snd_crowd)
if !sound_isplaying(snd_music)
sound_loop(snd_main_menu_music)

image_speed = .4
global.player_spr[0] = spr_baseball_player_idle
global.player_spr_swing[0] = spr_baseball_player_swing
global.player_spr_hit[0] = spr_batter_red_hit

global.player_spr[1] = spr_knight_idle
global.player_spr_swing[1] = spr_knight_swing
global.player_spr_hit[1] = spr_knight_red_hit

global.player_spr[2] = spr_wizard_idle
global.player_spr_swing[2] = spr_wizard_swing
global.player_spr_hit[2] = spr_wizard_blue_hit

p1_spr = 0
p2_spr = 1

spr_choice[0] = spr_baseball_player_idle
spr_choice[1] = spr_knight_idle
spr_choice[2] = spr_wizard_idle
spr_choice[3] = spr_character4

spr_choice_swing[0] = spr_baseball_player_swing
spr_choice_swing[1] = spr_knight_swing
spr_choice_swing[2] = spr_wizard_swing
spr_choice_swing[3] = spr_character4

spr_choice_hit[0] = spr_batter_red_hit
spr_choice_hit[1] = spr_knight_red_hit
spr_choice_hit[2] = spr_wizard_blue_hit
spr_choice_hit[3] = spr_character4

spr_choices = 3

p1_ready = 0
p2_ready = 0

a = .5
adir = .1


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room = rm_game
sound_stop(snd_main_menu_music)


sound_play(snd_music)
sound_volume(snd_music, 0);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if a &gt;= 1
adir = -.1
if a &lt;= .5
adir = .1

a += adir

scr_game_end()

draw_set_halign(fa_center)
draw_set_valign(fa_center)
draw_set_color(c_lime)
draw_set_font(fnt_getready)
if p1_ready
    draw_text(room_width / 4 , room_height / 2 - sprite_get_height(spr_player1) * 2 - 96 , "Player 1 Ready")
else
    draw_text(room_width / 4 , room_height / 2 - sprite_get_height(spr_player1) * 2 - 96, "Player 1 Choose Character#Press Button 1 when ready")

if p2_ready
    draw_text(room_width / 4 * 3, room_height / 2 - sprite_get_height(spr_player1) * 2 - 96 , "Player 2 Ready")
else
    draw_text(room_width / 4 * 3, room_height / 2 - sprite_get_height(spr_player1) * 2 - 96 , "Player 2 Choose Character#Press Button 1 when ready")

//global.player1_spr

draw_sprite(spr_choice[p1_spr],-1,room_width/4 , room_height/2)
draw_sprite_ext(spr_choice[p2_spr],-1,room_width/4*3 , room_height/2,-1,1,0,c_white,1)

w = sprite_get_width(spr_player1) * 1.5

if !p1_ready
    {
    draw_sprite_ext(spr_choose_arrows,0,room_width / 4 + w,room_height / 2,1,1,0,c_white,a)
    draw_sprite_ext(spr_choose_arrows,0,room_width / 4 - w,room_height / 2,-1,1,0,c_white,a)
    
    if keyboard_check_pressed(ord('A'))
        {
        if p1_spr &gt; 0
        p1_spr --
        else
        p1_spr = spr_choices - 1
        sound_play(snd_characterselect)
        }
    
    if keyboard_check_pressed(ord('D'))
        {
        if p1_spr &lt; spr_choices - 1
        p1_spr ++
        else
        p1_spr = 0
        sound_play(snd_characterselect)
        }
    }

if !p2_ready
{
draw_sprite_ext(spr_choose_arrows,0,room_width / 4 * 3 + w,room_height / 2,1,1,0,c_white,a)
draw_sprite_ext(spr_choose_arrows,0,room_width / 4 * 3 - w,room_height / 2,-1,1,0,c_white,a)

if keyboard_check_pressed(vk_left)
    {
    if p2_spr &gt; 0
    p2_spr --
    else
    p2_spr = spr_choices - 1
    sound_play(snd_characterselect)
    }

if keyboard_check_pressed(vk_right)
    {
    if p2_spr &lt; spr_choices - 1
    p2_spr ++
    else
    p2_spr = 0
    sound_play(snd_characterselect)
    }
}
if !p1_ready
if keyboard_check_pressed(ord("F"))
    {
    p1_ready = 1 //!p1_ready
    global.player_spr[0] = spr_choice[p1_spr]
    global.player_spr_swing[0] = spr_choice_swing[p1_spr]
    global.player_spr_hit[0] = spr_choice_hit[p1_spr]
    sound_play(snd_ready)
    }
if !p2_ready    
if keyboard_check_pressed(ord("K"))
    {
    p2_ready = 1 //!p2_ready
    global.player_spr[1] = spr_choice[p2_spr]
    global.player_spr_swing[1] = spr_choice_swing[p2_spr]
    global.player_spr_hit[1] = spr_choice_hit[p2_spr]
    sound_play(snd_ready)
    }
    
if p1_ready &amp;&amp; p2_ready
    {
    draw_set_color(c_black)
    draw_set_halign(fa_center)
    draw_set_valign(fa_center)
    draw_set_font(fnt_getready)
    //draw_text(room_width / 2,room_height - 128,"Game starts in "+string(round(alarm[0] / 30)))
    sound_fade(snd_main_menu_music,0,30*8)
    }
else
    {
    alarm[0] = 30 * 2
    }
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
