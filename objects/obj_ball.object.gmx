<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hspeed = 0

side = 0

alarm[0] = 30 * 3 + 20

right_key_pressed1 = 0
right_key_pressed2 = 0

ball_initial_spd = 10

swing_animation_speed = .4

hspeed_last = hspeed

game_over = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !game_over
{
hspeed = -ball_initial_spd
if random(10) &gt; 5
hspeed = ball_initial_spd

side = 1

obj_player1.sprite_index = global.player_spr[0]
obj_player2.sprite_index = global.player_spr[1]

obj_player1.image_speed = swing_animation_speed
obj_player2.image_speed = swing_animation_speed
}
else
{
room = rm_game_over
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle += 20

//CHOOSE RANDOM DIRECTION WHEN BALL SWITCHES SIDES
if side = 1
    {
    if x &lt; room_width / 2
        {
        side = -1
        obj_hud.image_angle = irandom(3) * 90
        }
    }
if side = -1
    {
    if x &gt; room_width / 2
        {
        side = 1
        obj_hud.image_angle = irandom(3) * 90
        }
    }
    
//if x &lt; room_width / 2
//{
key[0] = ord('D')
key[1] = ord('W')
key[2] = ord('A')
key[3] = ord('S')

if obj_player1.alarm[0] &lt; 1
if !right_key_pressed1
    {
    if obj_player1.image_angle = 0
        {
        if keyboard_check(key[obj_hud.image_angle/90])
            {
            right_key_pressed1 = 1
            }
        for(i=0 ; i &lt; 4 ; i++)
            {
            if keyboard_check(key[i]) &amp;&amp; (i != obj_hud.image_angle/90 || obj_ball.hspeed &gt; 0 &amp;&amp; abs(x - room_width / 2) &lt; 300)
                {
                //STUMBLE
                if !keyboard_check(key[obj_hud.image_angle/90])
                    {
                    //obj_player1.image_angle = 45
                    obj_player1.alarm[0] = 30
                    right_key_pressed1 = 2
                    }
                }
            }
        }
    }

//}
//else
//{

if obj_player2.alarm[0] &lt; 1
if !right_key_pressed2
    {
    key[0] = vk_right
    key[1] = vk_up
    key[2] = vk_left
    key[3] = vk_down
    if obj_player2.image_angle = 0
        {
        if keyboard_check(key[obj_hud.image_angle/90])
            {
            right_key_pressed2 = 1
            }
        for(i=0 ; i &lt; 4 ; i++)
            {
            if keyboard_check(key[i]) &amp;&amp; (i != obj_hud.image_angle/90 || obj_ball.hspeed &lt; 0 &amp;&amp; abs(x - room_width / 2) &lt; 300)
                {
                //STUMBLE
                if !keyboard_check(key[obj_hud.image_angle/90])
                    {
                    //obj_player2.image_angle = 45
                    obj_player2.alarm[0] = 30
                    right_key_pressed2 = 2
                    }
                }
            }
        }
    }
//}

//PLAYER 1 CONTROLS
if x &lt; obj_player1.x + 320
if hspeed &lt; 0
    {
    if right_key_pressed1 = 1
        {
        if obj_player1.sprite_index != global.player_spr_swing[0]
        sound_play(snd_swing)
        obj_player1.image_speed = swing_animation_speed
        obj_player1.sprite_index = global.player_spr_swing[0]
        }
    }
if x &lt; obj_player1.x + 128
    {
    if right_key_pressed1 = 1
        {
        hspeed = abs(hspeed) + 1
        if global.player_spr[0] = spr_baseball_player_idle
        sound_play(snd_bathit)
        if global.player_spr[0] = spr_knight_idle
        sound_play(snd_shieldhit)
        if global.player_spr[0] = spr_wizard_idle
        sound_play(snd_magic_hit)
        }
    else
        {
        obj_player1.sprite_index = global.player_spr_hit[0] //90
        instance_create(obj_player1.x + 128,obj_player1.y,obj_pow)
        obj_player1.image_speed = 0
        x = room_width/2
        speed = 0
        alarm[0] = 30 * 1.5
        obj_hud.p1_lives --;
        sound_play(snd_boo)
        }
    right_key_pressed1 = 0
    }
//PLAYER 2 CONTROLS
if x &gt; obj_player2.x - 320
if hspeed &gt; 0
    {
    if right_key_pressed2 = 1
        {
        if obj_player2.sprite_index != global.player_spr_swing[1]
        sound_play(snd_swing)
        obj_player2.image_speed = swing_animation_speed
        obj_player2.sprite_index = global.player_spr_swing[1]
        }
    }
if x &gt; obj_player2.x - 128
    {    
    if right_key_pressed2 = 1
        {
        hspeed = -abs(hspeed) - 1
        if global.player_spr[1] = spr_baseball_player_idle
        sound_play(snd_bathit)
        if global.player_spr[1] = spr_knight_idle
        sound_play(snd_shieldhit)
        if global.player_spr[1] = spr_wizard_idle
        sound_play(snd_magic_hit)
        }
    else
        {
        obj_player2.sprite_index = global.player_spr_hit[1] //90
        instance_create(obj_player2.x - 128,obj_player2.y,obj_pow)
        obj_player2.image_speed = 0
        x = room_width/2
        speed = 0
        alarm[0] = 30 * 1.5
        obj_hud.p2_lives --;
        sound_play(snd_boo)
        }
    right_key_pressed2 = 0
    }

if obj_hud.p1_lives = 0
    {
    global.winner = 2
    game_over = 1
    } 

if obj_hud.p2_lives = 0
    {
    global.winner = 1
    game_over = 1
    } 


if abs(x - room_width / 2) &lt; 100
    {
    right_key_pressed1 = 0
    right_key_pressed2 = 0
    }
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,0,x,y,1,1,image_angle,c_white,1)
/*
if hspeed != hspeed_last
draw_sprite(spr_pow,-1,x,y)

hspeed_last = hspeed
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
